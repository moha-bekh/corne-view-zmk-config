/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        main_layer {
            bindings = <
&kp GRAVE  &kp Q        &kp W           &kp E             &kp R      &kp T                   &kp Y                 &kp U        &kp I           &kp O           &kp P           &kp EQUAL
&kp LBKT   &mt LCTRL A  &mt LEFT_GUI S  &mt LEFT_ALT D    &kp F      &kp G                   &kp H                 &kp J        &mt LEFT_ALT K  &mt LEFT_GUI L  &mt LCTRL SEMI  &kp SQT
&kp MINUS  &kp Z        &kp X           &kp C             &kp V      &kp B                   &kp N                 &kp M        &kp COMMA       &kp DOT         &kp FSLH        &kp BACKSLASH
                                        &mt LEFT_GUI DEL  &lt 1 TAB  &mt LSHIFT BACKSPACE    &mt LEFT_SHIFT SPACE  &lt 2 ENTER  &mt LCTRL ESC
            >;

            label = "Main";
        };

        left_layer {
            bindings = <
&trans  &kp N1    &kp N2         &kp N3       &kp N4   &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&to 4   &trans    &trans         &trans       &trans   &trans    &trans    &trans    &trans  &trans     &trans  &trans
                                 &trans       &trans   &trans    &trans    &trans    &trans
            >;

            label = "Num/Nav";
        };

        right_layer {
            bindings = <
&trans  &kp N1           &kp N2  &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans  &trans    &trans      &trans         &trans     &trans         &trans        &trans                &trans                 &to 4
                                 &trans    &trans      &kp CAPS       &trans     &trans         &trans
            >;

            label = "Num/Sym";
        };

        dual_layer {
            bindings = <
&none   &kp F11  &kp F12  &trans  &none   &none     &none   &none   &trans  &trans  &trans   &none
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &none
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Func";
        };

        config_layer {
            bindings = <
&trans  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2      &bt BT_DISC 3  &bt BT_DISC 4    &trans      &trans        &trans             &trans  &trans  &trans
&trans  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4     &trans      &trans        &trans             &trans  &trans  &trans
&to 0   &bt BT_CLR_ALL  &bt BT_PRV     &bt BT_NXT         &bt BT_CLR     &trans           &trans      &trans        &trans             &trans  &trans  &to 0
                                       &ext_power EP_TOG  &out OUT_BLE   &sys_reset       &sys_reset  &out OUT_USB  &ext_power EP_TOG
            >;

            label = "Conf";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        dual_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
